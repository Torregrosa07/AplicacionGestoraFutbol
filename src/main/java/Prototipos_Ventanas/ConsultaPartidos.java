/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Prototipos_Ventanas;

import controladores.controladorPartido;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author keiny
 */
public class ConsultaPartidos extends javax.swing.JPanel {

    private controladorPartido controlador;
    private DefaultTableModel modeloPartidos;
    private DefaultTableModel modeloEstadisticas;

    public ConsultaPartidos() {
        controlador = new controladorPartido();
        initComponents();

        try {
            System.out.println("Configurando Tabla de Partidos...");
            DefaultTableModel modelo = controlador.cargarPartidos();
            tablaPartidos.setModel(modelo);

            tablaPartidos.setEnabled(false);
            tablaPartidos.setRowSelectionAllowed(false);

            tablaPartidos.getColumnModel().getColumn(0).setPreferredWidth(50);  // ID
            tablaPartidos.getColumnModel().getColumn(1).setPreferredWidth(100); // Fecha
            tablaPartidos.getColumnModel().getColumn(2).setPreferredWidth(80);  // Hora
            tablaPartidos.getColumnModel().getColumn(3).setPreferredWidth(150); // Equipo Local
            tablaPartidos.getColumnModel().getColumn(4).setPreferredWidth(150); // Equipo Visitante

            System.out.println("Tabla de Partidos configurada correctamente. Filas: " + tablaPartidos.getRowCount());
        } catch (Exception e) {
            System.err.println("Error al configurar jTable2: " + e.getMessage());
            e.printStackTrace();
        }

        try {
            System.out.println("Configurando Tabla de Estadistícas...");
            DefaultTableModel estadisticasModel = controlador.cargarEstadisticas();
            if (estadisticasModel.getRowCount() == 0) {
                System.out.println("Advertencia: No se cargaron estadísticas. El modelo está vacío.");
            } else {
                System.out.println("Estadísticas cargadas exitosamente. Filas: " + estadisticasModel.getRowCount());
                estadisticasModel = controlador.ordenarEstadisticasPorPuntos(estadisticasModel);
                System.out.println("Estadísticas ordenadas por puntos. Filas: " + estadisticasModel.getRowCount());

            }

            tablaEstadisticas.setModel(estadisticasModel);

            tablaEstadisticas.setEnabled(false);
            tablaEstadisticas.setRowSelectionAllowed(false);

            tablaEstadisticas.getColumnModel().getColumn(0).setPreferredWidth(150); // Equipo
            tablaEstadisticas.getColumnModel().getColumn(1).setPreferredWidth(50);  // GF
            tablaEstadisticas.getColumnModel().getColumn(2).setPreferredWidth(50);  // GC
            tablaEstadisticas.getColumnModel().getColumn(3).setPreferredWidth(50);  // PG
            tablaEstadisticas.getColumnModel().getColumn(4).setPreferredWidth(50);  // PP
            tablaEstadisticas.getColumnModel().getColumn(5).setPreferredWidth(50);  // PE
            tablaEstadisticas.getColumnModel().getColumn(6).setPreferredWidth(80);  // Puntos

            System.out.println("Tabla de Estadistícas onfigurada correctamente. Filas: " + tablaEstadisticas.getRowCount());
        } catch (Exception e) {
            System.err.println("Error al configurar jTable1: " + e.getMessage());
            e.printStackTrace();
        }
    }

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPartidos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEstadisticas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fechaABuscar = new com.toedter.calendar.JDateChooser();
        buscarPartidoPorFecha = new javax.swing.JLabel();
        buscar = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        tablaPartidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPartidos);

        tablaEstadisticas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaEstadisticas);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 22)); // NOI18N
        jLabel1.setText("Partidos Establecidos");

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 22)); // NOI18N
        jLabel2.setText("Estadistícas ");

        buscarPartidoPorFecha.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        buscarPartidoPorFecha.setText("Buscar Partidos por Fecha: ");

        buscar.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buscarPartidoPorFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fechaABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(177, 177, 177))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buscarPartidoPorFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(fechaABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        Date fecha = fechaABuscar.getDate();
    if (fecha == null) {
        JOptionPane.showMessageDialog(null, "Por favor, seleccione una fecha.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String fechaSeleccionada = sdf.format(fecha);
    
    DefaultTableModel modelo = controlador.buscarPartidosPorFecha(fechaSeleccionada);// se llama al método del controlador para buscar partidos por fecha
    tablaPartidos.setModel(modelo);

    // se muestra un mensaje si no se encontraron partidos
    if (modelo.getRowCount() == 0) {
        JOptionPane.showMessageDialog(null, "No se encontraron partidos para la fecha: " + fechaSeleccionada, "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JLabel buscarPartidoPorFecha;
    private com.toedter.calendar.JDateChooser fechaABuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaEstadisticas;
    private javax.swing.JTable tablaPartidos;
    // End of variables declaration//GEN-END:variables
}
